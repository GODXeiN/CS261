# Classification vs Regression (with examples)
https://www.springboard.com/blog/data-science/regression-vs-classification/

# Explanation of Logistic Regression + basic tutorial
https://www.datacamp.com/tutorial/understanding-logistic-regression-python

# Tutorial for Sklearn for classification models (basis for most of the code)
https://towardsdatascience.com/building-classification-models-with-sklearn-6a8fd107f0c1

# Numpy + Sklearn
https://medium.com/personal-project/numpy-pandas-and-scikit-learn-explained-e7336baecedc


# Research for Simulation
"On average, a developer creates 70 bugs per 1000 lines of code (!)
 15 bugs per 1,000 lines of code find their way to the customers
 Fixing a bug takes 30 times longer than writing a line of code
 75% of a developerâ€™s time is spent on debugging (1500 hours a year!) "
https://www.openrefactory.com/intelligent-code-repair-icr/

"Defect Density: 1/1000 lines of code"
Not always full picture; requires defects to be known
https://www.sealights.io/code-quality/defect-density-context-is-king/

# Imputation for filling-in missing values in data-set
https://scikit-learn.org/stable/modules/impute.html

# Mean-Squared-error for evaluating regression models]
https://scikit-learn.org/stable/modules/generated/sklearn.metrics.mean_squared_error.html

# Nearest-Neighbours Regression model for continuous output data
https://scikit-learn.org/stable/modules/neighbors.html